"A particular location available for booking"
type Listing {
    id: ID!
    "Listing title"
    title: String!
    "The listing's description"
    description: String!
    "Number of beds available"
    numOfBeds: Int
    "Cost per night of stay"
    costPerNight: Float
    "Indicates whether location is closed for booking"
    closedForBookings: Boolean
    "The amenities available for this listing"
    amenities: [Amenity!]!
}

type Amenity {
    id: ID!
    "The amenity category the amenity belongs to"
    category: String!
    "The amenity's name"
    name: String!
}

type Query {
    "Curated array of listings to feature on homepage"
    featuredListings: [Listing!]!,
    "Returns the details about this listing."
    listing(id: ID!): Listing
}

type Mutation {
"Creates a new listing"
createListing(input:CreateListingInput!): CreateListingResponse!
}

type CreateListingResponse {
    "Similar to HTTP status code, represents the status of the mutation."
    code:Int!
    "Indicates whether the mutation was successful."
    success: Boolean!
    "Human-readable message for the UI"
    message: String!
    "The newly created listing"
    listing: Listing
}

input CreateListingInput {
    "The listing's tytle"
    title: String!
    "The listing's description"
    description: String!
    "The number of beds available"
    numOfBeds: Int!
    "The cost per night"
    costPerNight: Float!
    "Indicates whether listing is closed for bookings (on hiatus)"
    closedForBookings: Boolean
    "The Listing's amenities"
    amenities: [ID!]!
}